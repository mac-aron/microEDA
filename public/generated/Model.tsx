/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 --types 3d/test.glb
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Shape: THREE.Mesh;
    Shape_1: THREE.Mesh;
    Shape_2: THREE.Mesh;
    Shape_3: THREE.Mesh;
    Shape_4: THREE.Mesh;
    Shape_5: THREE.Mesh;
  };
  materials: {
    APP_1: THREE.MeshStandardMaterial;
    APP_2: THREE.MeshStandardMaterial;
    APP_3: THREE.MeshStandardMaterial;
    APP_4: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/public/generated/model.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Shape.geometry} material={materials.APP_1} />
      <mesh geometry={nodes.Shape_1.geometry} material={materials.APP_1} />
      <mesh geometry={nodes.Shape_2.geometry} material={materials.APP_2} />
      <mesh geometry={nodes.Shape_3.geometry} material={materials.APP_3} />
      <mesh geometry={nodes.Shape_4.geometry} material={materials.APP_2} />
      <mesh geometry={nodes.Shape_5.geometry} material={materials.APP_4} />
    </group>
  );
}

useGLTF.preload("/public/generated/model.glb");
